export const GLSL_VS_DEFAULT = '#version 300 es\nprecision mediump float;\nlayout(location = 0) in vec2 aPosition;\nlayout(location = 1) in vec2 aUV;\n\nout vec2 vUV;\n\nvoid main(){\ngl_Position = vec4(aPosition *2.0-1.0,0,1);\n\nvUV = aUV;\n}'; 
export const GLSL_PS_DEFAULT =    '#version 300 es\nprecision highp float;\nin vec2 vUV;\nuniform sampler2D uSampler;\n\nout vec4 fragColor;\nvoid main(){\nfragColor = texture(uSampler,vUV);\n}\n';    
export constversion 300 es\nprecision highp float;\nin vec2 vUV;\nuniform sampler2D uSampler;\nuniform sampler2D uSampler1;\n\nout vec4 fragColor;\nvoid main(){\nfragColor = texture(uSampler,vUV);\n}\n
export const GLSL_PS_TRACING =  '#version 300 es\nprecision highp float;\nin vec2 vUV;\n\nuniform float uTime;\n\nout vec3 fragColor;\n\n\nfloat random(vec2 co){\nfloat a = 12.9898, b = 78.233, c = 43758.5453;\nfloat dt = dot(co.xy, vec2(a, b));\ndt = mod(dt,3.14);\nreturn fract(sin(dt) *c);\n}\n\n\nvec2 RandomDir(){\nfloat r =random(vUV+uTime) * 3.1415926 *2.0;\nreturn vec2(sin(r),cos(r));\n}\n\nconst vec2 pPos = vec2(0.5,0.5);\nconst vec2 pDir = vec2(-1.0,0.0);\n\nconst float MAX_DIST = 100000.0;\n\n\nfloat intersectplane(vec2 pos,vec2 dir,vec2 planePoint,vec2 planeNor){\n\nvec2 nor = normalize(planeNor);\nvec2 rd = planePoint - pos;\nfloat ndotd = dot(rd,nor);\n\nfloat len = abs(ndotd);\nfloat ndott = dot(dir,-nor);\n\nfloat t = len / ndott;\nreturn t;\n}\n\nfloat intersectCircle(inout vec2 ppos,inout vec2 pdir,vec2 cpos,float cradius){\nvec2 rd = cpos - ppos;\npdir = normalize(pdir);\n\nfloat rddotd = dot(pdir,rd);\nfloat rdlen2 = dot(rd,rd);\n\nfloat d = rdlen2 - rddotd*rddotd;\n\nfloat cradius2 = cradius * cradius;\nif(d > cradius2){\nreturn MAX_DIST;\n}\n\nfloat t = rddotd - sqrt(cradius2 - d);\n\nppos += t * pdir;\npdir = normalize(ppos - cpos);\nreturn t;\n\n}\n\nvec3 traceRay(vec2 rpos,vec2 rdir){\n\nfloat tmin = MAX_DIST;\n\nfloat tv = 0.0;\n\n//c1\nvec2 tpos = rpos;\nvec2 tdir = rdir;\n\nfloat t = intersectCircle(tpos,tdir,vec2(0.5),0.1);\nif(t < tmin){\ntmin = t;\ntv = 1.0;\n}\n\n//c2\ntpos = rpos;\ntdir = rdir;\nt = intersectCircle(tpos,tdir,vec2(0.7,0.3),0.05);\nif(t < tmin){\ntmin = t;\ntv = 1.0;\n}\n\nreturn vec3(tv);\n}\n\n\n\nvoid main(){\n\nvec3 col = traceRay(vUV,RandomDir());\nfragColor = col;\n}\n\n\n\n\n\n';  
export const GLSL_PS_MERGE =   '#version 300 es\nprecision highp float;\nin vec2 vUV;\nuniform sampler2D uSampler;\nuniform sampler2D uSampler1;\n\nuniform float uLerp;\n\nout vec3 fragColor;\nvoid main(){\n\nvec3 colf = texture(uSampler,vUV).rgb;\nvec3 col = texture(uSampler1,vUV).rgb;\n\nfragColor = mix(col,colf,uLerp);\n}\n\n\n';   
